# GitHub Action workflows to build and test the plug-in on Ubuntu
#
# Adapted from Wireshark's repository https://gitlab.com/wireshark/wireshark/-/tree/master/.github/workflows

name: Build and test Ubuntu plug-in

on: [push, pull_request]

env:
   WIRESHARK_BRANCH: release-3.6

jobs:
   standalone:
      name: Build and test standalone plugin
      runs-on: ubuntu-18.04
      steps:
         - name: Checkout plug-in
           uses: actions/checkout@v2
           
         - name: Install dependencies for a standalone build
           run: |
              sudo add-apt-repository ppa:wireshark-dev/stable -y
              sudo apt-get update -qq
              export DEBIAN_FRONTEND=noninteractive
              echo "wireshark-common wireshark-common/install-setuid boolean true" | sudo debconf-set-selections
              sudo apt-get install -yqq cmake wireshark wireshark-dev tshark

         - name: Build standalone
           run: |
              mkdir build
              cd build
              cmake ..
              make
              make install

         - name: Install dependencies for testing
           run: |
              sudo apt-get install -yqq libxml2-dev libxslt-dev python2.7-dev python-pip
         - name: Set up Python
           uses: actions/setup-python@v2
           with:
              python-version: 2.7
         - name: Install Python packages for testing
           run: |
              python2 -m pip install --upgrade pip setuptools wheel
              python2 -m pip install pysap
         - name: Install patched pyshark-legacy version
           run: |
              git clone https://github.com/martingalloar/pyshark-legacy
              python2 -m pip install pyshark-legacy/src
         - name: Run tests
           run: |
              python2 tests/__init__.py

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/sap.so exe/sap-standalone.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v2
           with:
              name: packages
              path: exe

   intree:
      name: Build in-tree plugin
      runs-on: ubuntu-18.04
      steps:
         - name: Checkout Wireshark
           run: |
              git init
              git remote add -t "${{ env.WIRESHARK_BRANCH }}" -f origin https://gitlab.com/wireshark/wireshark.git
              git checkout ${{ env.WIRESHARK_BRANCH }}
         - name: Checkout plug-in
           uses: actions/checkout@v2
           with:
              path: plugins/epan/sap
         - name: Apply patch
           run: |
              git apply plugins/epan/sap/wireshark-${{ env.WIRESHARK_BRANCH }}.patch
         - name: Install dependencies for a in-tree build
           run: |
              sudo gem install asciidoctor
              sudo apt-get update -qq
              sudo apt-get install -yqq cmake libglib2.0-dev qttools5-dev qttools5-dev-tools libqt5svg5-dev qtmultimedia5-dev qt5-default libc-ares-dev libpcap-dev bison flex make python3 python3-pip perl libgcrypt-dev

         - name: Build in-tree
           run: |
              mkdir build
              cd build
              cmake ..
              make sap tshark

         - name: Install dependencies for testing
           run: |
              sudo apt-get install -yqq libxml2-dev libxslt-dev python2.7-dev python-pip
         - name: Set up Python
           uses: actions/setup-python@v2
           with:
              python-version: 2.7
         - name: Install Python packages for testing
           run: |
              python2 -m pip install --upgrade pip setuptools wheel
              python2 -m pip install pysap
         - name: Install patched pyshark-legacy version
           run: |
              git clone https://github.com/martingalloar/pyshark-legacy
              python2 -m pip install pyshark-legacy/src
         - name: Run tests
           run: |
              cd plugins/epan/sap/
              python2 tests/__init__.py
           env:
              TSHARK_PATH: ${{ github.workspace }}/build/run/tshark

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/run/plugins/3.6/epan/sap.so exe/sap-source.so
         - name: Upload Ubuntu artifacts
           uses: actions/upload-artifact@v2
           with:
              name: packages
              path: exe

   release:
      name: Release
      runs-on: ubuntu-18.04
      needs: intree
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'v') }}
      steps:
         - name: Download Ubuntu artifacts
           uses: actions/download-artifact@v2
           with:
              name: packages
              path: exe
         - name: Create a release
           id: create_release
           uses: actions/create-release@v1
           with:
              tag_name: ${{ github.ref }}
              release_name: SAP Plug-in for Wireshark ${{ github.ref }}
              draft: true
              prerelease: false
         - name: Upload release asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: exe/sap-source.so
              asset_name: sap-${{ github.ref }}-linux-x86-64.so
              asset_content_type: application/octet-stream
