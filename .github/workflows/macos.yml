# GitHub Action workflows to build and test the plug-in on MacOS
#
# Adapted from Wireshark's repository https://gitlab.com/wireshark/wireshark/-/tree/master/.github/workflows

name: Build and test MacOS plug-in

on: [push, pull_request]

env:
   WIRESHARK_BRANCH: release-3.6
   WIRESHARK_QT_VERSION: 5.15.2

jobs:
   standalone:
      name: Build and test standalone plugin
      runs-on: macos-latest
      continue-on-error: true
      steps:
         - name: Checkout plug-in
           uses: actions/checkout@v2
         - name: Update brew packages
           run: brew update
         - name: Install dependencies for a standalone build
           run: |
              brew install wireshark -v

         - name: Build standalone
           run: |
              mkdir build
              cd build
              cmake ..
              make
              make install

         - name: Set up Python
           uses: actions/setup-python@v2
           with:
              python-version: 2.7
         - name: Install dependencies for testing
           run: |
              brew install libdnet libpcap
         - name: Install Python packages for testing
           run: |
              python2 -m pip install --upgrade pip setuptools wheel
              python2 -m pip install pysap
         - name: Install patched pyshark-legacy version
           run: |
              git clone https://github.com/martingalloar/pyshark-legacy
              python2 -m pip install pyshark-legacy/src
         - name: Run tests
           run: |
              python2 tests/__init__.py

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/sap.so exe/sap-standalone.so
         - name: Upload Ubuntu packages
           uses: actions/upload-artifact@v2
           with:
              name: packages
              path: exe

   intree:
      name: Build and test in-tree plugin
      runs-on: macos-latest
      steps:
         - name: Checkout Wireshark
           run: |
              git init
              git remote add -t "${{ env.WIRESHARK_BRANCH }}" -f origin https://gitlab.com/wireshark/wireshark.git
              git checkout ${{ env.WIRESHARK_BRANCH }}
         - name: Checkout plug-in
           uses: actions/checkout@v2
           with:
              path: plugins/epan/sap
         - name: Apply patch
           run: |
              git apply plugins/epan/sap/wireshark-${{ env.WIRESHARK_BRANCH }}.patch

         - name: Set up Python 3.8
           uses: actions/setup-python@v2
           with:
              python-version: 3.8
         - name: Set up Ruby 2.6
           uses: actions/setup-ruby@v1.1.2
           with:
              ruby-version: '2.6'
         - name: Update brew packages
           run: brew update
         - name: Install dependencies for a in-tree build
           run: |
              brew install c-ares glib libgcrypt gnutls lua@5.1 cmake nghttp2 snappy lz4 libxml2 ninja libmaxminddb libsmi spandsp brotli minizip zstd libssh libilbc speexdsp gettext qt5 || true

         - name: Install asciidoctor
           run: gem install asciidoctor

         - name: Build in-tree
           run: |
              mkdir build
              cd build
              cmake ..
              make sap tshark

         - name: Set up Python
           uses: actions/setup-python@v2
           with:
              python-version: 2.7
         - name: Install dependencies for testing
           run: |
              brew install libdnet libpcap
         - name: Install Python packages for testing
           run: |
              python2 -m pip install --upgrade pip setuptools wheel
              python2 -m pip install pysap
         - name: Install patched pyshark-legacy version
           run: |
              git clone https://github.com/martingalloar/pyshark-legacy
              python2 -m pip install pyshark-legacy/src
         - name: Run tests
           run: |
              cd plugins/epan/sap
              python2 tests/__init__.py
           env:
              TSHARK_PATH: ${{ github.workspace }}/build/run/Wireshark.app/Contents/MacOS/tshark

         - name: Copy plugin so
           run: |
              mkdir exe
              cp build/run/Wireshark.app/Contents/PlugIns/wireshark/3-4/epan/sap.so exe/sap-source.so
         - name: Upload MacOS artifacts
           uses: actions/upload-artifact@v2
           with:
              name: packages
              path: exe

   release:
      name: Release
      runs-on: macos-latest
      needs: intree
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'v') }}
      steps:
         - name: Download MacOS artifacts
           uses: actions/download-artifact@v2
           with:
              name: packages
              path: exe
         - name: Create a release
           id: create_release
           uses: actions/create-release@v1
           with:
              tag_name: ${{ github.ref }}
              release_name: SAP Plug-in for Wireshark ${{ github.ref }}
              draft: true
              prerelease: false
         - name: Upload release asset
           uses: actions/upload-release-asset@v1
           with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} 
              asset_path: exe/sap-source.so
              asset_name: sap-${{ github.ref }}-macos-x86-64.so
              asset_content_type: application/octet-stream
